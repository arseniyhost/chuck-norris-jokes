{"version":3,"sources":["components/Category/Category.jsx","components/Header/Header.jsx","components/Joke/Joke.jsx","fetchFun.js","App.js","reportWebVitals.js","index.js"],"names":["Category","item","getJoke","setJoke","onClick","className","Header","logo","src","alt","Joke","joke","getRandomJokeCategories","category","setFun","fetch","then","res","json","result","value","App","useState","categories","setCategories","logoUrl","setLogoUrl","useEffect","icon_url","getCategories","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QASeA,EANE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC/B,OACI,wBAAQC,QAAS,WAAQF,EAAQD,EAAME,IAAYE,UAAU,kBAA7D,SAAgFJ,KCSzEK,G,MAXA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACI,iCACI,sBAAKF,UAAU,OAAf,UACI,qBAAKG,IAAKD,EAAME,IAAI,SACpB,qBAAKJ,UAAU,YAAf,iCCGDK,G,MARF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACX,OACI,qBAAKN,UAAU,aAAf,SACI,4BAAIM,QCkBHC,EAA0B,SAACC,EAAUC,GAC9CC,MAAM,oDAAD,OAAqDF,IACrDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFL,EAAOK,EAAOC,WCaXC,MAlCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOX,EAAP,KAAaR,EAAb,KACA,EAAoCmB,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WDJc,IAACb,ICKZY,EDJXX,MAAM,2CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFL,EAAOK,EAAOS,aAZH,SAACd,GACpBC,MAAM,2CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFL,EAAOK,EAAOC,UCUtBlB,CAAQC,GDEiB,SAACW,GAC1BC,MAAM,+CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFL,EAAOK,MCLfU,CAAcL,KACb,IAGD,qCACE,cAAC,EAAD,CAAQjB,KAAMkB,IACd,sBAAKpB,UAAU,UAAf,UACE,qBAAKA,UAAU,YAAf,SACE,8CAGF,qBAAKA,UAAU,aAAf,SAEIkB,EAAaA,EAAWO,KAAI,SAAC7B,EAAM8B,GACjC,OAAO,cAAC,EAAD,CAAU7B,QAASU,EAAyBT,QAASA,EAASF,KAAMA,GAAW8B,MACnF,KAGT,qBAAK1B,UAAU,cAAf,SACE,cAAC,EAAD,CAAMM,KAAMA,aCtBPqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.349c2e93.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Category.css\"\r\n\r\nconst Category = ({ item, getJoke, setJoke }) => {\r\n    return (\r\n        <button onClick={() => { getJoke(item, setJoke) }} className=\"random-category\">{item}</button>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\nimport \"./Header.css\"\r\n\r\nconst Header = ({ logo }) => {\r\n    return (\r\n        <header>\r\n            <div className=\"menu\">\r\n                <img src={logo} alt=\"logo\" />\r\n                <div className=\"logo-text\">Chuck Norris</div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport \"./Joke.css\";\r\n\r\nconst Joke = ({joke}) => {\r\n    return (\r\n        <div className=\"block-joke\">\r\n            <p>{joke}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Joke","export const getJoke = (setFun) => {\r\n    fetch('https://api.chucknorris.io/jokes/random')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setFun(result.value)\r\n        })\r\n}\r\n\r\nexport const getUrlIcon = (setFun) => {\r\n    fetch('https://api.chucknorris.io/jokes/random')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setFun(result.icon_url);\r\n        })\r\n}\r\n\r\nexport const getCategories = (setFun) => {\r\n    fetch('https://api.chucknorris.io/jokes/categories')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setFun(result);\r\n        })\r\n}\r\n\r\nexport const getRandomJokeCategories = (category, setFun) => {\r\n    fetch(`https://api.chucknorris.io/jokes/random?category=${category}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setFun(result.value)\r\n        })\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Category from './components/Category/Category';\nimport Header from './components/Header/Header';\nimport Joke from './components/Joke/Joke';\nimport { getJoke, getUrlIcon, getCategories, getRandomJokeCategories } from './fetchFun';\n\nfunction App() {\n  const [joke, setJoke] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [logoUrl, setLogoUrl] = useState('');\n\n  useEffect(() => {\n    getUrlIcon(setLogoUrl)\n    getJoke(setJoke)\n    getCategories(setCategories)\n  }, [])\n\n  return (\n    <>\n      <Header logo={logoUrl} />\n      <div className=\"wrapper\">\n        <div className=\"main-text\">\n          <h1>Categories</h1>\n        </div>\n\n        <div className=\"categories\">\n          {\n            categories ? categories.map((item, index) => {\n              return <Category getJoke={getRandomJokeCategories} setJoke={setJoke} item={item} key={index} />\n            }) : ''\n          }\n        </div>\n        <div className=\"chuck-jokes\">\n          <Joke joke={joke} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}